subprojects {
    apply plugin: "java-library"

    group 'org.example'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    // 指定gradle插件的仓库
    buildscript {
        repositories {
            maven {
                url "http://maven.aliyun.com/nexus/content/groups/public/"
            }
        }
    }
}

afterEvaluate{
    project -> println "root module afterEvaluate -----> $project.name"
}

gradle.beforeProject{
    project -> println "beforeProject $project.name"
}

gradle.afterProject{
    project -> println "afterProject $project.name"
}

gradle.taskGraph.whenReady {
    println "taskGraph.whenReady"
}

task aTask(dependsOn: 'bTask') {
//    dependsOn("bTask")
    println("aTask")
    doFirst {
        println "doFirst"
    }

    doLast {
        println "doLast"
    }
}

task bTask {
    println("bTask")
    doFirst {
        println("bTask First")
    }
}

// Task依赖
aTask.dependsOn("bTask")

// 自定义Task类
class IncrementTask extends DefaultTask {
    String msg = "default"

    IncrementTask() {
        group '自定义任务'
        description("任务描述")
    }

    @TaskAction
    void run () {
        println("run $msg")
    }
}

// 使用Task1
task printMsg(type: IncrementTask) {
    msg = "print msg"
}

// 使用Task2
tasks.create('printMsg2', IncrementTask) {
    msg = "print msg2"
}

// 构建完之后执行
gradle.buildFinished{
    result -> println "delete rootDir/build/libs"
    delete "build/libs"
}
